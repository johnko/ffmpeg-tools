#!/bin/sh
######################################################################
# LICENSE pulled in with, cat LICENSE  | awk '{print "# "$0}'
######################################################################
# Copyright (c) 2015, John Ko
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
######################################################################
# Script version is yymmdd-HHMMSS in UTC, date -u +%y%m%d-%H%M%S
######################################################################
SCRIPTVERSION=150715-131607

if [ -d /Volumes/zzz/beet ]; then
BEETFOLDER=/Volumes/zzz/beet
ECHONEST=yes
LASTGENRE=yes
KEYFINDER=yes
WEB=web
tmpfile=~/.config/beets/config.yaml.tmp
realfile=~/.config/beets/config.yaml
FFMPEG=ffmpeg

elif [ -d /tank/dlna/beet ]; then
BEETFOLDER=/tank/dlna/beet
ECHONEST=no
LASTGENRE=no
KEYFINDER=no
WEB=""
tmpfile=/usr/home/urep/.config/beets/config.yaml.tmp
realfile=/usr/home/urep/.config/beets/config.yaml
FFMPEG=/usr/local/bin/ffmpeg

else
    echo "Can't find BEETFOLDER"
    exit 1
fi

# generates a beets config with playlists per key and genre

cat > ${tmpfile} <<EOF
directory: ${BEETFOLDER}/music
library: ${BEETFOLDER}/db.blb
asciify_paths: yes
import:
    move: yes
plugins: convert discogs echonest fetchart keyfinder lastgenre smartplaylist ${WEB}
lastgenre:
    auto: ${LASTGENRE}
    count: 10
    source: track
keyfinder:
   auto: ${KEYFINDER}
   bin: /Applications/KeyFinder.app/Contents/MacOS/KeyFinder
echonest:
   auto: ${ECHONEST}
convert:
    dest: ${BEETFOLDER}/mp3
    format: mp3
    formats:
        mp3: ${FFMPEG} -i \$source -y -vn -ab 320k \$dest
smartplaylist:
    playlist_dir: ${BEETFOLDER}/playlists
    playlists:
        - name: all.m3u
          query: ''
        - name: z_bpm_94.m3u
          query: 'bpm:..94'
        - name: z_bpm_95-111.m3u
          query: 'bpm:95..111'
        - name: z_bpm_112-123.m3u
          query: 'bpm:112..123'
        - name: z_bpm_124-129.m3u
          query: 'bpm:124..129'
        - name: z_bpm_130.m3u
          query: 'bpm:130..'
EOF

for tag in danceability energy liveness speechiness ; do
    last=0
    for i in 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1 ; do
        if [ "${last}" != "${i}" ]; then
            stripdot=`echo ${i} | tr -d '.'`
            echo "        - name: z_${tag}_${stripdot}.m3u" >> ${tmpfile}
            echo "          query: '${tag}:${last}..${i}'" >> ${tmpfile}
        fi
        last=${i}
    done
done

# playlist per key

beet ls -f '$initial_key' \
| sort -u \
| awk '$1~/./ {print "        - name: z_key_"$1".m3u\n          query: @initial_key:"$1"@"}' \
| sed "s;@;';g" \
>> ${tmpfile}

# playlist per genre

beet ls -f '$genre' \
| tr ', ' '\n' \
| sort \
| uniq -c \
| awk '$1>1 && $2~/./ {print $2}' \
| awk '{print "        - name: z_genre_"$1".m3u\n          query: @genre:"$1"@"}' \
| sed "s;@;';g" \
>> ${tmpfile}

mv ${tmpfile} ${realfile}

chown urep ${realfile}
