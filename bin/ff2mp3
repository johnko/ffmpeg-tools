#!/bin/sh
######################################################################
# LICENSE pulled in with, cat LICENSE  | awk '{print "# "$0}'
######################################################################
# Copyright (c) 2015, John Ko
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
######################################################################
# Script version is yymmdd-HHMMSS in UTC, date -u +%y%m%d-%H%M%S
######################################################################
SCRIPTVERSION=150729-091223

INPATH=/tank/dlna/ffconvertqueuemp3
DONEPATH=/tank/dlna/ffdonemp3
OUTPATH=/tank/dlna/ffmp3

install -d -m 755 -o urep ${INPATH}
install -d -m 755 -o urep ${DONEPATH}
install -d -m 755 -o urep ${OUTPATH}
chown -R urep ${INPATH}
chown -R urep ${DONEPATH}
chown -R urep ${OUTPATH}

nameendswithmp3() {
    if echo "${line}" | grep '\.mp3$' > /dev/null ; then
        # 0 means no error, so you can do "if nameendswithmp4 ; then"
        return 0
    fi
    # 1 means error
    return 1
}

audioismp3() {
    if ffprobestream "$1" | grep 'Audio: *mp3' > /dev/null ; then
        # 0 means no error, so you can do "if nameendswithmp4 ; then"
        return 0
    fi
    # 1 means error
    return 1
}

ls -1 "${INPATH}" \
| while read line ; do
    if [ "x" != "x${line}" ]; then
        if [ ! -e "${OUTPATH}/${line}.mp3" ]; then
            echo "${line}"
            # check if file is already .mp4, h264 and aac, if so just move it
            if nameendswithmp3 && audioismp3 "${INPATH}/${line}" ; then
                echo "file is already .mp3, and mp3"
                ln "${INPATH}/${line}" "${OUTPATH}/${line}"
                mv "${INPATH}/${line}" "${DONEPATH}/${line}"
            else
                #echo "No, name ends with somethin else"
                if audioismp3 "${INPATH}/${line}" ; then
                    echo "re-containerize in mp3"
                    su -l urep -c sh <<EOF
/usr/local/bin/ffmpeg -hide_banner -i "${INPATH}/${line}" -vn -acodec copy                                           -threads 0 "${OUTPATH}/${line}.mp3"
EOF
                    mv "${INPATH}/${line}" "${DONEPATH}/${line}"
                else
                    echo "re-encode audio"
                    su -l urep -c sh <<EOF
/usr/local/bin/ffmpeg -hide_banner -i "${INPATH}/${line}" -vn -acodec mp3 -ac 2 -strict experimental -ab 320k -f mp3 -threads 0 "${OUTPATH}/${line}.mp3"
EOF
                    mv "${INPATH}/${line}" "${DONEPATH}/${line}"
                fi
            fi
        fi
    fi
done
